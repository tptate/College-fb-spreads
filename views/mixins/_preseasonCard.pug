mixin preseasonCard(teams, division, conference)
  - fullNameList = [['ACCa', 'ACC Atlantic', 'ACC'], ['ACCc', 'ACC Coastal', 'ACC'], ['SECe', 'SEC East', 'SEC'],['SECw', 'SEC West', 'SEC'],['Big10e','Big10 East', 'Big10'], ['Big10w','Big10 West', 'Big10'], ['Pac12n', 'Pac12 North', 'Pac12'], ['Pac12s', 'Pac12 South', 'Pac12'],['Big12', 'Big12', 'Big12']];
  - let fullName = "";
  each name in fullNameList
    if division === name[0]
      - fullName = name[1]
  p= `Who will win the ${fullName || division}?`
  .btn-group-vertical
    if preseason
      if division !== conference
        each team in teams
          if !preseason[division]
            label.col-lg-3(class=`btn btn-lg ${team[1]} team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${team[0]}` value=`${team[1]}`)
              p= `${team[0]} - ${team[1]}`
            input.hide(type='radio' name=`${division}` class=`${team[1]}` autocomplete='off' value=`${team[1]}`)
          else if preseason[division] === team[1]
            label.col-lg-3(class=`btn btn-lg ${team[1]} active team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${team[0]}` value=`${team[1]}`)
              p= `${team[0]} - ${team[1]}`
            input.hide(type='radio' name=`${division}` class=`${team[1]}` autocomplete='off' value=`${team[1]}` checked)
          else
            label.col-lg-3(class=`btn btn-lg ${team[1]} hidden team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${team[0]}` value=`${team[1]}`)
              p= `${team[0]} - ${team[1]}`
            input.hide(type='radio' name=`${division}` class=`${team[1]}` autocomplete='off' value=`${team[1]}`)
        - divisionPoints = `${division}Points`
        if preseason[division]
          input.hidden(type='number' name=`${division}Points` value=`${preseason[divisionPoints]}`)
          p.points(id=`${division}`) Worth #{preseason[divisionPoints]} Points
        else
          input.hidden(type='number' name=`${division}Points` value=`${preseason[divisionPoints]}`)
          p.points.hiddenPoints(id=`${division}`) Worth #{preseason[divisionPoints]} Points
      else
        each name, i in fullNameList
          if name[2] === division
            - position = i
        each team, i in teams
          - divisionPlace =  fullNameList[position - ((i + 1) % 2)][0]
          - conferencePlace = fullNameList[position - ((i + 1) % 2)][2]
          - team[1] = `${preseason[divisionPlace]}`
          - pointsPlace = `${divisionPlace}Points`
          if preseason[divisionPlace] === preseason[conferencePlace] && preseason[conference]
            label.col-lg-3(class=`btn btn-lg ${conference} ${preseason[divisionPlace]} active team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${preseason[pointsPlace]*2}` value=`${preseason[divisionPlace]}`)
              p= team[1]
            input.hide(type='radio' name=`${division}` class=`${divisionPlace} ${conference}` autocomplete='off' value=`${team[1]}` checked)
          else if preseason[conference]
            label.col-lg-3(class=`btn btn-lg ${conference} ${preseason[divisionPlace]} hidden team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${preseason[pointsPlace]*2}` value=`${preseason[divisionPlace]}`)
              p= `${preseason[divisionPlace]}`
            input.hide(type='radio' name=`${division}` class=`${divisionPlace} ${conference}` autocomplete='off' value=`${team[1]}`)
          else
            label.col-lg-3(class=`btn btn-lg ${conference} ${preseason[divisionPlace] || ''} team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${preseason[pointsPlace]*2}` value=`${preseason[divisionPlace]}`)
              p= `${preseason[divisionPlace] || division + ' team'}`
            input.hide(type='radio' name=`${division}` class=`${divisionPlace} ${conference}` autocomplete='off' value=`${team[1]}`)

        - divisionPoints = `${division}Points`
        if preseason[conference]
          input.hidden(type='number' name=`${division}Points` value=`${preseason[divisionPoints]}`)
          p.points(id=`${division}` class=`${conference}`) Worth #{preseason[divisionPoints]} Points
        else
          input.hide(type='number' name=`${division}Points` value=`0`)
          p.points.hiddenPoints(id=`${division}` class=`${conference}`) Worth X Points
    else
      each team in teams
        label.col-lg-3(class=`btn btn-lg ${team[1]} team` for=`${division}` name=`${division}` data-conference=`${conference}` data-points=`${team[0]}` value=`${team[1]}`)
          p= `${team[0]} - ${team[1]}`
        input.hide(type='radio' name=`${division}` class=`${team[1]}` autocomplete='off' value=`${team[1]}`)
      input.hidden(type='number' name=`${division}Points`)

      p.points.hiddenPoints(id=`${division}`) Worth X Points

